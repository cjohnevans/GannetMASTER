function VoxelOnFSPGRafni(pfile, FSPGRdirectory, MRS_Rot_folder)
% function VoxelOnFSPGRafni(pfile, ...
%                   FSPGRdirectory,  ...
%                   MRS_Rot_folder, ...
%                   )
%   pfile and FSPGRdirectory, MRS_Rot_folder require full paths 
%
% Dec 09: turn into a function, get voxel centre information from pfile header generated by print_raw_headerss
% 15 Jan 10: tidy up paths, voxel dimensions from pfile header,use pfile name in Mask filename output
%           Does voxel dim calc work for all rotator orientations?
% v100910: Sept 10: Fix crash when voxel is near edge of FSPGR
%
%  AFNI version: 
%   need FSPGR converted by to3dcubric.multislice with nifti and reordered
%   dicoms (iMRDC*) in FSPGRdirectory
pfile;

GenerateNifti = 0; % from the dcm files

%get from P file header!
%VoxelSize=[25 40 30];

%Tactical Plan
%1. Get voxel centre from MRS prescription
%2. Get FSPGR location (and rotation) from FSPGR dicom header
%3. Build Cubic mask in the coordinate frame of the FSPGR (unrotated).
%4. Get voxel rotation from MRS_Rot dicom header.
%5. Rotate Cubic mask in FSPGR space.


%1. Get voxel centre from MRS prescription
% CJE get this information from the P file header (*.7.hdr) generated by
% copyspectro, rather than from the .shf sage header file
ptr=fopen([pfile '.hdr' ]);
MRSHead=fscanf(ptr,'%c');

[m n]=size(MRSHead); 
fclose(ptr);

k = findstr(' user11:', MRSHead);
b=str2num(MRSHead(k+11:k+18));
k = findstr(' user12:', MRSHead);
c=str2num(MRSHead(k+11:k+18));
k = findstr(' user13:', MRSHead);
a=str2num(MRSHead(k+11:k+18));
Voxel_RAS_coord=[ -b -c a];
k = findstr(' user8:', MRSHead);
d=str2num(MRSHead(k+10:k+17));
k = findstr(' user9:', MRSHead);
e=str2num(MRSHead(k+10:k+17));
k = findstr(' user10:', MRSHead);
f=str2num(MRSHead(k+11:k+18));
VoxelSize = [f e d ]; % works for ob-axial rotator 
%VoxelSize = [d f e]; % thalamus version
%VoxelSize = [d e f]; % insula version

%2. Get FSPGR location (and rotation) from FSPGR header
% Get this from the dicom header prior to conversion
% Get dir info
dcmlist = dir([FSPGRdirectory '/iMRDC*' ]);
dcmfile_first = [FSPGRdirectory '/' dcmlist(1).name ]
dcmfile_last = [FSPGRdirectory '/' dcmlist(end).name ]
numslices =numel(dcmlist);   
niftilist = dir([FSPGRdirectory '/*.nii.gz' ]);
FSPGR_nifti = [FSPGRdirectory '/' niftilist(1).name ]

FSPGRHead=dicominfo(dcmfile_first);
FSPGR_Coord1=FSPGRHead.ImagePositionPatient;
FSPGR_Rot=FSPGRHead.ImageOrientationPatient;
FSPGR_Rot=reshape(FSPGR_Rot',[3 2]);
FSPGR_Rot(:,3)=cross(FSPGR_Rot(:,1),FSPGR_Rot(:,2));
FSPGR_Rot(:,1:2)=FSPGR_Rot(:,1:2)/2;
FSPGR_Rot(1:2,:)=-FSPGR_Rot(1:2,:);

FSPGRHead=dicominfo(dcmfile_last);
FSPGR_Coord2=FSPGRHead.ImagePositionPatient;

FSPGR_SideCentre=((FSPGR_Coord1+FSPGR_Coord2)/2);
FSPGR_VolumeCentre=FSPGR_SideCentre+FSPGRHead.ImageOrientationPatient(1:3)*128+FSPGRHead.ImageOrientationPatient(4:6)*128;

sysout = ['mkdir ' FSPGRdirectory '/MRSvoxelReg' ];
system(sysout);

savename = [ FSPGRdirectory '/MRSvoxelReg/' FSPGRHead.StudyID '_FSPGR_Coord.mat'];
%savename=mat2str(savename)
save (savename, 'FSPGR_Coord1', 'FSPGR_Coord2', 'FSPGR_Rot', 'FSPGR_SideCentre', 'FSPGR_VolumeCentre');

FSPGR_to_Vox=Voxel_RAS_coord-FSPGR_VolumeCentre';
FSPGR_to_Vox_FSL=FSPGR_to_Vox';

%January fiddle step. 
% Don't need this for to3d conversion...
%FSPGR_to_Vox_FSL(2)=-FSPGR_to_Vox_FSL(2);

Voxel_Centre_FSL=FSPGR_to_Vox_FSL+[128 128 (numslices/2) ]'; 

%SKIP STEP 3 AND GO TO STEP 4 - VOXEL ROTATION.
files = dir(MRS_Rot_folder);
MRSRotHead=dicominfo([MRS_Rot_folder '/' files(3).name]); 
MRS_Rot=MRSRotHead.ImageOrientationPatient;
MRS_Rot=reshape(MRS_Rot',[3 2]);
%MRS_Rot(:,2)=-MRS_Rot(:,2);
%MRS_Rot(1:2,1:2)=MRS_Rot(1:2,1:2);
MRS_Rot(:,3)=cross(MRS_Rot(:,1),MRS_Rot(:,2))

MRS_Rot(1,:)=-MRS_Rot(1,:);

%for afni
MRS_Rot(2,:)=-MRS_Rot(2,:);


%MRS_Rot=MRS_Rot'
MRS_Rot=-MRS_Rot;
%MRS_Rot(2,1)=-MRS_Rot(2,1);
%MRS_Rot(1,2)=-MRS_Rot(1,2);
%MRS_Rot(3,:)=-MRS_Rot(3,:);
%MRS_Rot(:,3)=-MRS_Rot(:,3);


%Build a mask
Mask=zeros(256,256,numslices);
AxesV=zeros(256,256,256);

% CJE sept 10: need to make sure voxel doesn't poke out of the FSPGR...

ii_min=fix(Voxel_Centre_FSL(1)-50);
if(ii_min<1) 
   ii_min=1;
end
ii_max=fix(Voxel_Centre_FSL(1)+50);
if(ii_max>256)
   ii_max=256;
end

jj_min=fix(Voxel_Centre_FSL(2)-50);
if(jj_min<1) 
   jj_min=1;
end
jj_max=fix(Voxel_Centre_FSL(2)+50);
if(jj_max>256)
   jj_max=256;
end

kk_min=fix(Voxel_Centre_FSL(3)-25);
if(kk_min<1) 
   kk_min=1;
end
kk_max=fix(Voxel_Centre_FSL(3)+25);
if(kk_max>256)
   kk_max=256;
end

for ii=ii_min:ii_max % 50~ 30*sqrt(3)
    for jj=jj_min:jj_max
        for kk=kk_min:kk_max
            Coord_from_Vox_Center=[ii jj kk]'-Voxel_Centre_FSL;
            %Need to take this into the Coordinate frame of the Voxel
            %New_Coord=FSPGR_Rot*Coord_from_Vox_Center;
            New_Coord=[[-1 0 0];[0 -1 0];[0 0 1]]*Coord_from_Vox_Center;
            
            New_Coord=inv(MRS_Rot)*New_Coord;
            Mask(ii,jj,kk)=(New_Coord(1)<=VoxelSize(1)/2)*(New_Coord(2)<=VoxelSize(2)/2)*(New_Coord(3)<=VoxelSize(3)/2)*(New_Coord(1)>-VoxelSize(1)/2)*(New_Coord(2)>-VoxelSize(2)/2)*(New_Coord(3)>-VoxelSize(3)/2);
            %Mask(ii,jj,kk)=Mask(ii,jj,kk)*(New_Coord(1)>-VoxelSize(1)/2)*(New_Coord(2)>-VoxelSize(2)/2)*(New_Coord(3)>-VoxelSize(3)/2);
            %AxesV(ii,jj,kk)=Mask(ii,jj,kk)*((abs(New_Coord(1))<0.5)*(abs(New_Coord(2))<0.5)+((abs(New_Coord(2))<0.5)*(abs(New_Coord(3))<0.5))+((abs(New_Coord(3))<0.5)*(abs(New_Coord(1))<0.5)));
        end
    end
end

FSPGR_nifti
FSPGR=load_nifti(FSPGR_nifti);
ViewVolume=circshift(Mask,[0 0 0])*1000+FSPGR.vol;
 
MaskOutput=FSPGR;

% work out exam & series from last '/' and '_' in pfilename
slsh=findstr('/', pfile);
if isempty(slsh) == 1
   slsh=0;
end
slsh=slsh(end);
undersc=findstr('_', pfile);
undersc=undersc(end);
exam_series_ID=pfile((slsh+1):(undersc-1));

%Arbitrary shift 'up'
MaskOutput.vol=circshift(Mask,[0 0 0]);
save_nifti(MaskOutput,[FSPGRdirectory '/' exam_series_ID '_Mask.nii.gz'] );


% %Grey Matter, White Matter, CSF
% 
% % Grey=load_nifti(['../' ExamNo '/Segment_prob_1.nii.gz']);
% % White=load_nifti(['../' ExamNo '/Segment_prob_2.nii.gz']);
% % CSF=load_nifti(['../' ExamNo '/Segment_prob_0.nii.gz']);
% % 
% % GreyVox=Grey.vol.*Mask;
% % WhiteVox=White.vol.*Mask;
% % CSFVox=CSF.vol.*Mask;
% % 
% % Voxel_Segmentation = [sum(CSFVox(:))/sum(Mask(:)) sum(GreyVox(:))/sum(Mask(:)) sum(WhiteVox(:))/sum(Mask(:))]
